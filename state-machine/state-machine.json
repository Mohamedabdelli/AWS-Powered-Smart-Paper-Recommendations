{
    "Comment": "A state machine with dedicated DLQs for each step, including within the Map state",
    "StartAt": "Extract",
    "States": {
      "Extract": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "OutputPath": "$.Payload",
        "Parameters": {
          "Payload.$": "$",
          "FunctionName": "${lambda_arn_DLQ_url.data-retrieval}"
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException",
              "Lambda.TooManyRequestsException"
            ],
            "IntervalSeconds": 1,
            "MaxAttempts": 3,
            "BackoffRate": 2
          }
        ],
        "Catch": [
          {
            "ErrorEquals": [
              "States.ALL"
            ],
            "Next": "Send to DLQ"
          }
        ],
        "Next": "Map"
      },
      "Send to DLQ": {
        "Type": "Task",
        "Resource": "arn:aws:states:::sqs:sendMessage",
        "Parameters": {
          "QueueUrl": "${lambda_arn_DLQ_url.Dlq-extract_url}",
          "MessageBody.$": "$"
        },
        "End": true
      },
      "Map": {
        "Type": "Map",
        "ItemProcessor": {
          "ProcessorConfig": {
            "Mode": "DISTRIBUTED",
            "ExecutionType": "STANDARD"
          },
          "StartAt": "Embedding and store",
          "States": {
            "Embedding and store": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "OutputPath": "$.Payload",
              "Parameters": {
                "Payload": {
                  "key_file.$": "$.Key"
                },
                "FunctionName": "${lambda_arn_DLQ_url.embedding_store}"
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 3,
                  "BackoffRate": 2
                }
              ],
              "Catch": [
                {
                  "ErrorEquals": [
                    "States.ALL"
                  ],
                  "Next": "Send to DLQ in Map"
                }
              ],
              "End": true
            },
            "Send to DLQ in Map": {
              "Type": "Task",
              "Resource": "arn:aws:states:::sqs:sendMessage",
              "Parameters": {
                "QueueUrl": "${lambda_arn_DLQ_url.Dlq-embedding_url}",
                "MessageBody.$": "$"
              },
              "End": true
            }
          }
        },
        "End": true,
        "Label": "Map",
        "MaxConcurrency": 1000,
        "ItemReader": {
          "Resource": "arn:aws:states:::s3:listObjectsV2",
          "Parameters": {
            "Bucket.$": "$.bucket_name",
            "Prefix.$": "$.query"
          }
        },
        "ItemSelector": {
          "Key.$": "$$.Map.Item.Value.Key",
          "bucket_name": "mohamedammar",
          "query": "civil engineering"
        },
        "ToleratedFailurePercentage": 100
      }
    }
  }